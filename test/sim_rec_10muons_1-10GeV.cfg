process Test =
{
   module mix = MixingModule
   {
      int32 bunchspace = 25
   }

  # initialize  MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"
 
  # initialize magnetic field
  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

  # tracker geometry
#  include "Geometry/CSCommonData/data/cmsIdealGeometryXML.cfi"

  # tracker geometry
  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"

  # tracker numbering
  include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

  # strip parameter estimator service for SiStripRecHitConverter
  include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"

  service = RandomNumberGeneratorService
  {
    untracked uint32 sourceSeed = 98765
  }
  
  include "SimGeneral/HepPDTESSource/data/pdt.cfi"

  source = FlatRandomPtGunSource
  {
    untracked uint32 firstRun = 1
    untracked int32 maxEvents = 3
    untracked PSet PGunParameters =
    {
      # you can request more than 1 particle
      untracked vint32  PartID = {13, -13, 13, -13, 13, -13, 13, -13, 13,
-13}
      untracked double MinEta = -2.5
      untracked double MaxEta =  2.5
      untracked double MinPhi = -3.14159265358979323846 # in radians
      untracked double MaxPhi =  3.14159265358979323846
      untracked double MinPt  =  0.99
      untracked double MaxPt  = 10.01
    }
  }

  # include geant4 simulation
  include "SimG4Core/Application/data/SimG4Object.cfi"

  # include SiStripDigitizer
  include "SimTracker/SiStripDigitizer/data/SiStripDigi.cfi"

  # include SiPixelDigitizer
  include "SimTracker/SiPixelDigitizer/data/PixelDigi.cfi"

  # include  pixClust
  include "RecoLocalTracker/SiPixelClusterizer/data/SiPixelClusterizer.cfi"

  # include SiStripClusterizer
  include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer.cfi"

  #include pixRecHitConverter
  include "RecoLocalTracker/SiPixelRecHits/data/SiPixelRecHits.cfi" 

  # include SiStripRecHitConverter
  include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"
 
  # GlobalMixedSeedGenerator (replace GlobalPixelSeedGenerator in 1_0_0)
  include "RecoTracker/TkSeedGenerator/data/GlobalMixedSeeds.cfi"

  # RoadSearchSeedFinder
  include "RecoTracker/RoadSearchSeedFinder/data/RoadSearchSeeds.cff"

  # KFTrackCandidateMaker
  include "RecoTracker/CkfPattern/data/CkfTrackCandidates.cff"

  # RoadSearchCloudMaker
  include "RecoTracker/RoadSearchCloudMaker/data/RawRoadSearchClouds.cff"

  # RoadSearchCloudMaker
  include "RecoTracker/RoadSearchCloudCleaner/data/CleanRoadSearchClouds.cff"

  # RoadSearchTrackCandidateMaker
  include "RecoTracker/RoadSearchTrackCandidateMaker/data/RoadSearchTrackCandidates.cff"

  # CTF analytical track fit
  include "RecoTracker/TrackProducer/data/CTFFinalFitAnalytical.cff"

  # CTF track fit with material
  include "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterial.cff"

  # RS analytical track fit
  include "RecoTracker/TrackProducer/data/RSFinalFitAnalytical.cff"

  # RS track fit with material 
  include "RecoTracker/TrackProducer/data/RSFinalFitWithMaterial.cff"

  # Offline primary vertex finding from both track types
  include "RecoVertex/PrimaryVertexProducer/data/OfflinePrimaryVerticesFromCTFTracks.cff"
  include "RecoVertex/PrimaryVertexProducer/data/OfflinePrimaryVerticesFromRSTracks.cff"

  module Out = PoolOutputModule
  {
    untracked string fileName = "sim_rec_10muons_1-10GeV.root"
  }

  sequence sim = 
  {
    g4SimHits,mix,
    siStripDigis,
    siPixelDigis
  }

  sequence localreco = 
  {
    siPixelClusters,
    siStripClusters,
    siPixelRecHits,
    siStripMatchedRecHits
  }

  sequence ckf = 
  {
    globalMixedSeeds,
    ckfTrackCandidates,
    ctfAnalyticalTracks,
    ctfWithMaterialTracks
  }

  sequence rs = 
  {
    roadSearchSeeds,
    rawRoadSearchClouds,
    cleanRoadSearchClouds,
    rsTrackCandidates,
    rsAnalyticalTracks,
    rsWithMaterialTracks
  }

  path p = 
  {
    sim,
    localreco,
    ckf,
    rs,
    offlinePrimaryVerticesFromCTFTracks
#    offlinePrimaryVerticesFromRSTracks
  }

  endpath e =
  {
    Out
  }
}
